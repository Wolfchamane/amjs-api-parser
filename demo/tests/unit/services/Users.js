/**
 * @NOTICE: DO NOT MODIFY THIS FILE
 * Autogenerated with @amjs/api-parser
 * @created 2019-07-16T10:36:45.141Z
 */
const { equal } = require('assert');
const AmjsAjaxService = require('@amjs/ajax-service');
const AmjsFactory = require('@amjs/factory');
const AmjsApiParserServiceUsers = require('../../../src/services/Users');

(function()
{
    let sut = new AmjsApiParserServiceUsers();
    equal(sut instanceof AmjsAjaxService, true, 'AmjsApiParserServiceUsers extends AmjsAjaxService');

    sut = AmjsFactory.create('AmjsApiParserServiceUsers');
    equal(sut instanceof AmjsApiParserServiceUsers, true,
        'Is registered as "AmjsApiParserServiceUsers"');
}());

(function()
{
    const allowedMethods = [
        'GET',
            'POST',
    ];

    const path = '/users';
    const method = 'GET';

    const sut = new AmjsApiParserServiceUsers();
    equal(sut.$allowedMethods.length === allowedMethods.length, true, `$allowedMethods is: ${allowedMethods.join()}`);
    equal(sut.path === path, true, `path is "${path}"`);
    equal(sut.method === method, true, `method is "${method}"`);
}());

(function()
{
    const model = 'Users';
    const sut = new AmjsApiParserServiceUsers();
    equal(sut._getModel('GET') === model, true, `_getModel returns expected "${model}"`);
    equal(sut._getModel('OPTION') === model, true, '_getModel of invalid method returns "${model}"');
    equal(sut._getModel() === model, true, '_getModel of empty method returns "${model}"');
}());