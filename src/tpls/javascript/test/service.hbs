/**
 * @NOTICE: DO NOT MODIFY THIS FILE
 * Autogenerated with @amjs/api-parser
 * @created {{date}}
 */
const { equal } = require('assert');
const AmjsAjaxService = require('@amjs/ajax-service');
const AmjsFactory = require('@amjs/factory');
const {{className}} = require('{{filePath models.get}}');

(function()
{
    let sut = new {{className}}();
    equal(sut instanceof AmjsAjaxService, true, '{{className}} extends AmjsAjaxService');

    sut = AmjsFactory.create('{{className}}');
    equal(sut instanceof {{className}}, true,
        'Is registered as "{{className}}"');
}());

(function()
{
    const allowedMethods = [
    {{#each allowedMethods as |method|}}
        '{{method}}',
    {{/each}}];

    const path = '{{url}}';

    const sut = new {{className}}();
    equal(sut.$allowedMethods.length === allowedMethods.length, true, `$allowedMethods is: ${allowedMethods.join()}`);
    equal(sut.path === path, true, `path is "${path}"`);
}());

(function()
{
    const model = '{{model.get}}';
    const sut = new {{className}}();
    equal(sut._getModel('{{model.get}}') === model, true, `_getModel returns expected "${model}"`);
    equal(sut._getModel('OPTION') === model, true, '_getModel of invalid method returns "${model}"');
    equal(sut._getModel() === model, true, '_getModel of empty method returns "${model}"');
}());