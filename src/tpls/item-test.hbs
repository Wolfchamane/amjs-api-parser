/**
 * @NOTICE: DO NOT MODIFY THIS FILE
 * Autogenerated with @amjs/api-parser
 * @created {{date}}
 */
const { equal }                     = require('assert');
const { AmjsDataTypesObject }       = require('@amjs/data-types');
const AmjsFactory                   = require('@amjs/factory');
const {{capitalCamelize namespace}}{{key}}    = require('../../../../src/{{keySourcePath}}/{{key}}');

(function()
{
    let sut = new {{capitalCamelize namespace}}{{key}}();
    equal(sut instanceof AmjsDataTypesObject, true, '{{capitalCamelize namespace}}{{key}} extends AmjsDataTypesObject');

    sut = AmjsFactory.create('{{capitalCamelize namespace}}{{key}}');
    equal(sut instanceof {{capitalCamelize namespace}}{{key}}, true, 'Is registered as "{{capitalCamelize namespace}}{{key}}"');
}());

(function()
{
    const sut = new {{capitalCamelize namespace}}{{key}}();
    [
        {{#each properties as |prop|}}
        '{{prop.name}}',
        {{/each}}
    ].forEach(prop => equal(prop in sut, true, `Property "${prop}" exists in instance`));
}());

(function()
{
    const sut = new {{capitalCamelize namespace}}{{key}}();
    const propertyTypes = {
    {{#each properties as |prop|}}
        {{prop.name}}: '{{prop.type}}',
    {{/each}}
    };
    Object.keys(propertyTypes).forEach(
        prop =>
            equal(sut.$propertyTypes[prop] === propertyTypes[prop], true,
                `Property "${prop}" has assigned a type of "${propertyTypes[prop]}"`));
}());
